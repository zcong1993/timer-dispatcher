// Code generated by protoc-gen-go. DO NOT EDIT.
// source: td.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_td_f2b2fe287da86458, []int{0}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (dst *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(dst, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Task) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Resp struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resp) Reset()         { *m = Resp{} }
func (m *Resp) String() string { return proto.CompactTextString(m) }
func (*Resp) ProtoMessage()    {}
func (*Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_td_f2b2fe287da86458, []int{1}
}
func (m *Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resp.Unmarshal(m, b)
}
func (m *Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resp.Marshal(b, m, deterministic)
}
func (dst *Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resp.Merge(dst, src)
}
func (m *Resp) XXX_Size() int {
	return xxx_messageInfo_Resp.Size(m)
}
func (m *Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_Resp proto.InternalMessageInfo

func (m *Resp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *Resp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "pb.Task")
	proto.RegisterType((*Resp)(nil), "pb.Resp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TdServiceClient is the client API for TdService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TdServiceClient interface {
	Add(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Resp, error)
}

type tdServiceClient struct {
	cc *grpc.ClientConn
}

func NewTdServiceClient(cc *grpc.ClientConn) TdServiceClient {
	return &tdServiceClient{cc}
}

func (c *tdServiceClient) Add(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/pb.TdService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TdServiceServer is the server API for TdService service.
type TdServiceServer interface {
	Add(context.Context, *Task) (*Resp, error)
}

func RegisterTdServiceServer(s *grpc.Server, srv TdServiceServer) {
	s.RegisterService(&_TdService_serviceDesc, srv)
}

func _TdService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TdServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TdService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TdServiceServer).Add(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

var _TdService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TdService",
	HandlerType: (*TdServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _TdService_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "td.proto",
}

func init() { proto.RegisterFile("td.proto", fileDescriptor_td_f2b2fe287da86458) }

var fileDescriptor_td_f2b2fe287da86458 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x49, 0xd1, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49,
	0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b,
	0x86, 0xa8, 0x50, 0xb2, 0xe2, 0x62, 0x09, 0x49, 0x2c, 0xce, 0x16, 0x12, 0xe1, 0x62, 0x2d, 0x4b,
	0xcc, 0x29, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x84, 0x64, 0xb8, 0x38,
	0x4b, 0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x24, 0x98, 0x14, 0x18, 0x35, 0x98, 0x83,
	0x10, 0x02, 0x4a, 0x06, 0x5c, 0x2c, 0x41, 0xa9, 0xc5, 0x05, 0x42, 0x7c, 0x5c, 0x4c, 0xf9, 0xd9,
	0x60, 0x8d, 0x1c, 0x41, 0x4c, 0xf9, 0xd9, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0xa9, 0xc5, 0xc5, 0x89,
	0xe9, 0xa9, 0x60, 0x3d, 0x9c, 0x41, 0x30, 0xae, 0x91, 0x1d, 0x17, 0x67, 0x48, 0x4a, 0x70, 0x6a,
	0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x21, 0x17, 0xb3, 0x63, 0x4a, 0x8a, 0x10, 0x87, 0x5e, 0x41,
	0x92, 0x1e, 0xc8, 0x0d, 0x52, 0x60, 0x16, 0xc8, 0x44, 0x25, 0xb1, 0xa6, 0xcb, 0x4f, 0x26, 0x33,
	0x09, 0x28, 0x71, 0xeb, 0x97, 0x19, 0xea, 0x17, 0x15, 0x24, 0xeb, 0x27, 0xa6, 0xa4, 0x58, 0x31,
	0x6a, 0x25, 0xb1, 0x81, 0x1d, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x47, 0xde, 0x1f, 0x4c,
	0xe2, 0x00, 0x00, 0x00,
}
